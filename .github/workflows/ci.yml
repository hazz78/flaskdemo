# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许推送到 Git
      packages: write  # 如果使用 GHCR

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      - name: Extract Version
        id: vars
        run: |
          # 使用短 commit hash 作为版本
          echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/my-app:${{ env.VERSION }} .

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/my-app:${{ env.VERSION }}

      - name: Update Kustomize Image Tag
        run: |
          kustomize edit set image ghcr.io/${{ github.repository_owner }}/my-app:${{ env.VERSION }}
          # 查看变更
          cat deploy/overlays/production/kustomization.yaml

      - name: Commit & Push to Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add deploy/overlays/production/kustomization.yaml
          git commit -m "ci: deploy version ${{ env.VERSION }}"
          git push origin main

      - name: Notify (Optional)
        run: |
          echo "✅ Deployed version ${{ env.VERSION }} to production via Argo CD"
